/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AccountHolder } from "@prisma/client";

export class AccountHolderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.AccountHolderCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccountHolderCountArgs>
  ): Promise<number> {
    return this.prisma.accountHolder.count(args);
  }

  async accountHolders<T extends Prisma.AccountHolderFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccountHolderFindManyArgs>
  ): Promise<AccountHolder[]> {
    return this.prisma.accountHolder.findMany(args);
  }
  async accountHolder<T extends Prisma.AccountHolderFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccountHolderFindUniqueArgs>
  ): Promise<AccountHolder | null> {
    return this.prisma.accountHolder.findUnique(args);
  }
  async createAccountHolder<T extends Prisma.AccountHolderCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccountHolderCreateArgs>
  ): Promise<AccountHolder> {
    return this.prisma.accountHolder.create<T>(args);
  }
  async updateAccountHolder<T extends Prisma.AccountHolderUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccountHolderUpdateArgs>
  ): Promise<AccountHolder> {
    return this.prisma.accountHolder.update<T>(args);
  }
  async deleteAccountHolder<T extends Prisma.AccountHolderDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccountHolderDeleteArgs>
  ): Promise<AccountHolder> {
    return this.prisma.accountHolder.delete(args);
  }
}
